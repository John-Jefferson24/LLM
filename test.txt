$headers = @{
    "Authorization" = "Bearer YOUR_TOKEN_HERE"
    "Content-Type" = "application/json"
}

# Define 5 test inputs (questions)
$testInputs = @(
    "What are the key features of Jina embeddings for text processing?",
    "Describe a futuristic space mission to Mars in detail.",
    "How can AI improve customer service in 2025?",
    "What is the history of space exploration up to 2025?",
    "Explain the concept of quantum computing in simple terms."
)

$body = @{
    model = "jina_ai/jina-embeddings-v2-base-en"
    input = $testInputs
} | ConvertTo-Json -Depth 10

try {
    $response = Invoke-WebRequest `
        -Uri "http://your-litellm-endpoint" `
        -Method Post `
        -Headers $headers `
        -Body $body `
        -ContentType "application/json"

    # Parse the JSON response and explicitly cast to double array
    $vectors = $response.Content | ConvertFrom-Json -AsHashtable | ForEach-Object { [double]$_ }

    # Embedding dimension for jina-embeddings-v2-base-en
    $embeddingDim = 768

    # Split flat list into 768-dimensional vectors
    if ($vectors.Count % $embeddingDim -eq 0 -and $vectors.Count -gt 0) {  # Removed -is [double] check
        $batchSize = $vectors.Count / $embeddingDim
        $individualVectors = @()
        for ($i = 0; $i -lt $batchSize; $i++) {
            $startIdx = $i * $embeddingDim
            $endIdx = $startIdx + $embeddingDim - 1
            $individualVectors += ,@($vectors[$startIdx..$endIdx])
        }

        # Display count and values
        Write-Output "Count: $batchSize"
        for ($i = 0; $i -lt $batchSize; $i++) {
            Write-Output "Value: $($individualVectors[$i][0..4])..."
        }
    } else {
        Write-Output "Invalid response: Embedding length $($vectors.Count) is not divisible by $embeddingDim or unexpected format"
    }
} catch {
    Write-Output "Error: $($_.Exception.Message)"
}
